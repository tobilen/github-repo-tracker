version: 2.1
defaults: &defaults
  working_directory: ~/github-repo-tracker
  docker:
    - image: cimg/node:14.14
orbs:
  heroku: circleci/heroku@0.0.10

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-cache-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore node modules
          keys:
            - node_modules-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile --cache-folder ~/github-repo-tracker/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/github-repo-tracker/.cache/yarn
      - save_cache:
          name: Save node_modules
          key: node_modules-{{ checksum "yarn.lock" }}
          paths:
            - ~/github-repo-tracker/node_modules
  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore node modules
          keys:
            - node_modules-{{ checksum "yarn.lock" }}
      - run:
          name: eslint
          command: yarn eslint --format junit --output-file reports/eslint/test-results.xml
      - run:
          name: stylelint
          command: |
            mkdir -p reports/stylelint
            yarn stylelint -s -- --custom-formatter 'node_modules/stylelint-junit-formatter' > reports/stylelint/test-results.xml
      - store_test_results:
          path: reports
  typecheck:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore node modules
          keys:
            - node_modules-{{ checksum "yarn.lock" }}
      - run: # run typescript
          name: typescript
          command: yarn tsc
  test:
    <<: *defaults
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          name: Restore node modules
          keys:
            - node_modules-{{ checksum "yarn.lock" }}
      - run:
          name: Run Jest tests using test splitting
          command: |
            mkdir -p ./test-results/junit
            TESTFILES=$(circleci tests glob "./**/*.test.{ts,js,tsx,jsx}" | circleci tests split --split-by=timings)
            yarn jest --ci --bail --testResultsProcessor=jest-junit --runInBand ${TESTFILES}
      - store_artifacts:
          path: test-results/junit
      - store_test_results:
          path: test-results/junit
  build-storybook:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore node modules
          keys:
            - node_modules-{{ checksum "yarn.lock" }}
      - run: # build storybook
          name: build-storybook
          command: yarn build-storybook
      - run:
          name: Deploy docs to gh-pages branch
          command: yarn deploy-storybook --ci

workflows:
  version: 2
  circle-ci-pipeline:
    jobs:
      - build
      - lint:
          requires:
            - build
      - typecheck:
          requires:
            - build
      - test:
          requires:
            - build
      - build-storybook:
          requires:
            - build
      - heroku/deploy-via-git:
          requires:
            - build
          filters:
            branches:
              only: master
